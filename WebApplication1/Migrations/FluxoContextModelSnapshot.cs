// <auto-generated />
using System;
using FluxoCaixa.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FluxoCaixa.Migrations
{
    [DbContext(typeof(FluxoContext))]
    partial class FluxoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("FluxoCaixa.Models.Custo", b =>
                {
                    b.Property<int>("IdCusto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("TipoCusto")
                        .HasColumnType("int");

                    b.HasKey("IdCusto");

                    b.ToTable("Custo");
                });

            modelBuilder.Entity("FluxoCaixa.Models.Fluxo", b =>
                {
                    b.Property<int>("IdFluxo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("TipoFluxo")
                        .HasColumnType("int");

                    b.HasKey("IdFluxo");

                    b.ToTable("Fluxo");
                });

            modelBuilder.Entity("FluxoCaixa.Models.FormaDePagamento", b =>
                {
                    b.Property<int>("IdFormaDePagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TipoFormaDePagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFormaDePagamento");

                    b.ToTable("FormaDePagamento");
                });

            modelBuilder.Entity("FluxoCaixa.Models.Registro", b =>
                {
                    b.Property<int>("IdRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DtRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdCusto")
                        .HasColumnType("int");

                    b.Property<int>("IdFluxo")
                        .HasColumnType("int");

                    b.Property<int>("IdFormaDePagamento")
                        .HasColumnType("int");

                    b.Property<int>("IdSubcategoria")
                        .HasColumnType("int");

                    b.Property<double>("ValorRegistro")
                        .HasColumnType("float");

                    b.HasKey("IdRegistro");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdCusto");

                    b.HasIndex("IdFluxo");

                    b.HasIndex("IdFormaDePagamento");

                    b.HasIndex("IdSubcategoria");

                    b.ToTable("Registro");
                });

            modelBuilder.Entity("WebApplication1.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DscTipoCategoria")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("WebApplication1.Models.Subcategoria", b =>
                {
                    b.Property<int>("IdSubcategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CategoriaIdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("DscTipoSubcategoria")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int");

                    b.HasKey("IdSubcategoria");

                    b.HasIndex("CategoriaIdCategoria");

                    b.ToTable("Subcategoria");
                });

            modelBuilder.Entity("FluxoCaixa.Models.Registro", b =>
                {
                    b.HasOne("WebApplication1.Models.Categoria", "Categoria")
                        .WithMany("Registros")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluxoCaixa.Models.Custo", "Custo")
                        .WithMany("Registros")
                        .HasForeignKey("IdCusto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluxoCaixa.Models.Fluxo", "Fluxo")
                        .WithMany("Registros")
                        .HasForeignKey("IdFluxo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluxoCaixa.Models.FormaDePagamento", "FormaDePagamento")
                        .WithMany("Registros")
                        .HasForeignKey("IdFormaDePagamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Subcategoria", "Subcategoria")
                        .WithMany("Registros")
                        .HasForeignKey("IdSubcategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Custo");

                    b.Navigation("Fluxo");

                    b.Navigation("FormaDePagamento");

                    b.Navigation("Subcategoria");
                });

            modelBuilder.Entity("WebApplication1.Models.Subcategoria", b =>
                {
                    b.HasOne("WebApplication1.Models.Categoria", "Categoria")
                        .WithMany("Subcategorias")
                        .HasForeignKey("CategoriaIdCategoria");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("FluxoCaixa.Models.Custo", b =>
                {
                    b.Navigation("Registros");
                });

            modelBuilder.Entity("FluxoCaixa.Models.Fluxo", b =>
                {
                    b.Navigation("Registros");
                });

            modelBuilder.Entity("FluxoCaixa.Models.FormaDePagamento", b =>
                {
                    b.Navigation("Registros");
                });

            modelBuilder.Entity("WebApplication1.Models.Categoria", b =>
                {
                    b.Navigation("Registros");

                    b.Navigation("Subcategorias");
                });

            modelBuilder.Entity("WebApplication1.Models.Subcategoria", b =>
                {
                    b.Navigation("Registros");
                });
#pragma warning restore 612, 618
        }
    }
}
